spring:
  mvc:
    throw-exception-if-no-handler-found: true             # 遇到404错误，直接抛出异常
  resources:
    add-mappings: false                                   # 不要为资源文件建立映射
  profiles:
    active: dev                                           # 项目环境 dev-开发环境 prod-生成环境
  druid:
    initial-size: 10                                      # 初始化连接池大小
    max-active: 50                                        # 最大连接池数量
    min-idle: 10                                          # 最小连接池数量
    max-wait: 60000                                       # 获取连接时最大等待时间，单位：毫秒。配置后缺省使用公平锁，并发效率会有所下降
    pool-prepared-statements: true                        # 是否缓存PSCache。PSCache对支持游标的数据库性能提升巨大
    max-pool-prepared-statement-per-connection-size: 100  # 在Druid中不会存在Oracle下PSCache占用内存过多的问题，可以设置大点
    validation-query: select 'x'                          # 用来检测连接是否有效的sql
    validation-query-timeout: 3                           # 检测连接是否有效的超时时间，单位：秒。
    test-on-borrow: false                                 # 申请连接时执行validationQuery检测连接是否有效，会降低性能
    test-on-return: false                                 # 归还连接时执行validationQuery检测连接是否有效，会降低性能
    # 空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效，不影响性能并且保证安全性
    test-while-idle: true
    # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
    keep-alive: false
    # 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
    # 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
    time-between-eviction-runs-millis: 60000
    min-evictable-idle-time-millis: 3600000               # 连接保持空闲而不被驱逐的最小时间
    filters: stat,log4j2,wall                             # stat:监控统计 log4j2:日志 wall:防御sql注入(informix删除wall)
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
  datasource:
    initialization-mode: always
    schema: classpath:data/schema-${spring.datasource.platform}.sql
    data: classpath:data/init-${spring.datasource.platform}.sql
    sql-script-encoding: UTF-8
  devtools:
    restart:
      enabled: true # 设置开启热部署
