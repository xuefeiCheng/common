server:
  port: 8080
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/portal?useUnicode=true&characterEncoding=UTF8&serverTimezone=GMT&useSSL=false
    username: root
    password: 20121221
    driver-class-name: com.mysql.cj.jdbc.Driver
    tomcat:
      initial-size: 10
      min-idle: 10 # 指定必须保持连接的最小值
      max-wait: 10000 # 指定连接池等待连接返回的最大等待时间，单位：毫秒
      max-idle: 10 # 指定连接池最大的空闲连接数量
    druid:
      initial-size: 10 # 初始化数据库连接池大小
      min-idle: 10 # 最小连接池数量
      max-active: 50 # 最大连接池数量
      max-wait: 60000 # 获取连接时最大等待时间
      time-between-eviction-runs-millis: 3600000 # 1. Destroy线程会检测连接的间隔时间 2. testWhileIdle的判断依据
      min-evictable-idle-time-millis: 60000 # 一个连接在连接池中最小生存时间
      validation-query: SELECT 1 FROM DUAL # 用来检测连接是否有效的sql
      #validation-query: SELECT FIRST 1 1 FROM SYSTABLES # informix配置
      test-while-idle: true # 申请连接的时候检测，如果空闲时间大于time-between-eviction-runs-millis,执行validation-query检测连接是否有效
      test-on-borrow: false # 申请连接时执行validation-query检测连接是否有效，会降低性能
      test-on-return: false # 归还连接时执行validation-query检测连接是否有效，会降低性能
      pool-prepared-statements: false # 是否缓存preparedStatement(PSCache)，对支持游标的数据库性能提升巨大，比如说Oracle。MySQL下建议关闭
      max-pool-prepared-statement-per-connection-size: 20 # 指定每个连接上的PSCache大小
      filters: stat,wall # 监控统计filter:stat  日志filter:log4j  防御sql注入的filter:wall(informix要去掉wall)
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      ip-white: 127.0.0.1
      ip-black:
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database: mysql
    database-platform: org.hibernate.dialect.MySQL57Dialect
    #properties:
      #hibernate: # informix需添加。防止报错Hibernate : Disabling contextual LOB creation as createClob() method threw error
        #temp:
          #use_jdbc_metadata_defaults: false
  mvc:
    throw-exception-if-no-handler-found: true
logging:
  level:
    root: INFO
    com.ebupt.portal: INFO
  file: log/portal.log
